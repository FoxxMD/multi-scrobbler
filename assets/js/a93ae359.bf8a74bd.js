"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["8881"],{4042:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,default:()=>u,toc:()=>c,metadata:()=>i,assets:()=>a,contentTitle:()=>l});var i=JSON.parse('{"id":"configuration/sources/listenbrainz-endpoint","title":"Listenbrainz (Endpoint)","description":"This Source enables multi-scrobbler to accept scrobbles from outside applications as if it was a Listenbrainz server.","source":"@site/docs/configuration/sources/listenbrainz-endpoint.mdx","sourceDirName":"configuration/sources","slug":"/configuration/sources/listenbrainz-endpoint","permalink":"/multi-scrobbler/configuration/sources/listenbrainz-endpoint","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/configuration/sources/listenbrainz-endpoint.mdx","tags":[],"version":"current","frontMatter":{"title":"Listenbrainz (Endpoint)","toc_min_heading_level":2,"toc_max_heading_level":5},"sidebar":"tutorialSidebar","previous":{"title":"Lastfm","permalink":"/multi-scrobbler/configuration/sources/lastfm-source"},"next":{"title":"Listenbrainz","permalink":"/multi-scrobbler/configuration/sources/listenbrainz-source"}}'),s=t(85893),r=t(50065);t(703),t(73752),t(75752);let o={title:"Listenbrainz (Endpoint)",toc_min_heading_level:2,toc_max_heading_level:5},l=void 0,a={},c=[{value:"URL",id:"url",level:5},{value:"Token",id:"token",level:5},{value:"Configuration",id:"configuration",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components},{Config:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Config",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This Source enables multi-scrobbler to accept scrobbles from outside applications as if it was a Listenbrainz server."}),"\n",(0,s.jsx)(n.admonition,{title:"Other Uses",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To ",(0,s.jsx)(n.strong,{children:"scrobble to"})," Listenbrainz, create a ",(0,s.jsx)(n.a,{href:"/configuration/clients/listenbrainz",children:"Listenbrainz (Client)"})]}),"\n",(0,s.jsxs)(n.li,{children:["To monitor and re-scrobble activity from your Listenbrainz account, create a ",(0,s.jsx)(n.a,{href:"/configuration/sources/listenbrainz-source",children:"Listenbrainz (Source)"})]}),"\n"]})}),"\n",(0,s.jsx)(n.h5,{id:"url",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:["If a ",(0,s.jsx)(n.strong,{children:"slug"})," is ",(0,s.jsx)(n.strong,{children:"not"})," provided in configuration then multi-scrobbler will accept Listenbrainz scrobbles at"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://localhost:9078/1/submit-listens\n"})}),"\n",(0,s.jsx)(n.p,{children:'which is the "standard" Listenbrainz server path for scrobbling.'}),"\n",(0,s.jsx)(n.p,{children:"Use a slug only if you need to setup multiple Listenbrainz Endpoint sources and cannot use different tokens."}),"\n",(0,s.jsx)(n.p,{children:"If a slug is used then the URL will be:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://localhost:9078/api/listenbrainz/mySlug\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Some Listenbrainz applications may require custom Listenbrainz URLs to be a real domain (",(0,s.jsx)(n.code,{children:"example.com"}),") and/or use SSL (",(0,s.jsx)(n.code,{children:"https://"}),"). In this case you should setup multi-scrobbler behind a reverse proxy to support this functionality. It is out of the scope of this project to do this solely within multi-scrobbler."]})}),"\n",(0,s.jsx)(n.h5,{id:"token",children:"Token"}),"\n",(0,s.jsxs)(n.p,{children:["Most Listenbrainz clients require a token (Authentication Token) to be provided during setup. This value can be anything you want, just make sure to use the same value for ",(0,s.jsx)(n.code,{children:"token"})," in your multi-scrobbler configuration for the endpoint."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t,{config:"ListenbrainzEndpointSourceConfig",fileContent:'[\n  {\n    "name": "myLz",\n    "enable": true,\n    "data": {\n      "token": "myToken"\n    }\n  }\n]\n',name:"endpointlz",children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Environmental Variable"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Required?"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"LZENDPOINT_ENABLE"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"No"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Use LZ Endpoint as a Source without any other configuration. Only required if slug/token are not provided as ENVs"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"LZE_TOKEN"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"No"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:'LZ "Authentication Token" you provided to the scrobbling application'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"LZE_SLUG"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"No"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"(Optional) The URL suffix to use for accepting LZ scrobbles"})]})]})]})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);