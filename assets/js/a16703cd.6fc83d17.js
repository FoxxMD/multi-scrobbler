"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["4328"],{70003:function(e,n,t){t.d(n,{ZP:()=>c,d$:()=>o});var i=t(85893),s=t(50065),l=t(75752),r=t.n(l);let o=[];function a(e){let n={a:"a",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"Source"})," that monitors active listening uses one of two metrics to determine if a Song is scrobbable based on your listening:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"percent"})," of track listened to (50% or more)"]}),"\n",(0,i.jsxs)(n.li,{children:["or amount of time (",(0,i.jsx)(n.strong,{children:"duration"}),") track was listened to (4 minutes or more)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["These default values are based on ",(0,i.jsx)(n.a,{href:"https://www.last.fm/api/scrobbling#when-is-a-scrobble-a-scrobble",children:"last.fm's scrobble guidance."})]}),"\n",(0,i.jsxs)(n.p,{children:["These values can be customized in the ",(0,i.jsx)(n.code,{children:"options"})," of Source's ",(0,i.jsx)(n.a,{href:"/configuration#configuration-types",children:"file or aio config"}),":"]}),"\n",(0,i.jsx)(r(),{language:"json5",title:`${e.filename}.json`,children:`{
  "data": {
      // ...
  },
  "options": {
      // highlight-start
      "scrobbleThresholds": {
          "duration": 40, // scrobbable if listened to for 40 seconds or more
          "percent": 20   // scrobbable if listened to for 20% or more of the track's length
      }
      // highlight-end
  }
}`})]})}function c(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},69918:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>h,toc:()=>c,metadata:()=>i,assets:()=>a,contentTitle:()=>o});var i=JSON.parse('{"id":"configuration/clients/clients","title":"Overview","description":"A Client is an application that stores the historical information about what songs you have played (scrobbles). Examples are Maloja, Last.fm, Listenbrainz...","source":"@site/docs/configuration/clients/clients.mdx","sourceDirName":"configuration/clients","slug":"/configuration/clients/","permalink":"/multi-scrobbler/configuration/clients/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/configuration/clients/clients.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Overview","toc_max_heading_level":4},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/multi-scrobbler/configuration/"},"next":{"title":"Koito","permalink":"/multi-scrobbler/configuration/clients/koito"}}'),s=t(85893),l=t(50065);t(70003);let r={sidebar_position:2,title:"Overview",toc_max_heading_level:4},o=void 0,a={},c=[{value:"Clients",id:"clients",level:2},{value:"Features",id:"features",level:2},{value:"Dead Scrobbles",id:"dead-scrobbles",level:3},{value:"Now Playing",id:"now-playing",level:3}];function d(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"Client"})," is an application that stores the historical information about what songs you have played (scrobbles). Examples are ",(0,s.jsx)(n.strong,{children:"Maloja, Last.fm, Listenbrainz"}),"..."]}),"\n",(0,s.jsx)(n.h2,{id:"clients",children:"Clients"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Now Playing"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/configuration/clients/lastfm",children:"Last.fm"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/configuration/clients/listenbrainz",children:"Listenbrainz"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/configuration/clients/koito",children:"Koito"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"\u274C"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/configuration/clients/maloja",children:"Maloja"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"\u274C"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/configuration/clients/rocksky",children:"Rocksky"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"\u274C"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.h3,{id:"dead-scrobbles",children:"Dead Scrobbles"}),"\n",(0,s.jsx)(n.p,{children:"If multi-scrobbler is unable to submit a scrobble to a Client then it places the scrobble into a queue which is retried every 5 minutes for a number of times before it gives up."}),"\n",(0,s.jsxs)(n.p,{children:["After it stops ",(0,s.jsx)(n.em,{children:"automatically"})," retrying the scrobble still exists and can be retried from the dashboard. Dead scrobbles persist between restart so you will never lose a scrobble that hasn't been successfully submitted yet."]}),"\n",(0,s.jsx)(n.h3,{id:"now-playing",children:"Now Playing"}),"\n",(0,s.jsxs)(n.p,{children:["Multi-scrobbler can report the currently ",(0,s.jsx)(n.strong,{children:"playing"})," tracks it is monitoring to some Scrobble Clients via their individual ",(0,s.jsx)(n.strong,{children:"Now Playing"})," functionality."]}),"\n",(0,s.jsxs)(n.p,{children:["Now Playing is ",(0,s.jsx)(n.strong,{children:"default enabled"})," for all Clients that support it."]}),"\n",(0,s.jsx)(n.p,{children:"The behavior multi-scrobbler uses for determining Now Playing reporting:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Now Playing can be explicitly enabled or disabled globally using ENV ",(0,s.jsx)(n.code,{children:"NOW_PLAYING=true"})," or ",(0,s.jsx)(n.code,{children:"NOW_PLAYING=false"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This only affects Clients that don't have behavior set via File/AIO (below)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Now Playing will be only be reported to the same Clients a Source is configured to scrobble to"}),"\n",(0,s.jsxs)(n.li,{children:["A Source's Player status must be ",(0,s.jsx)(n.strong,{children:"Playing"}),", IE ",(0,s.jsx)(n.strong,{children:"active"}),", for reporting to occur","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This status can be verified via Player UI on the Dashboard"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If multiple Sources having active Players then the scrobble Client will default to reporting the track based on Source ",(0,s.jsx)(n.strong,{children:"configuration"})," name, alphabetically","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This is the ",(0,s.jsx)(n.code,{children:"name"})," property set in ",(0,s.jsx)(n.a,{href:"/configuration?configType=file#configuration-types",children:"File or AIO source configs"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Clients can customize the Now Playing behavior individually using ",(0,s.jsx)(n.a,{href:"/configuration?configType=file#configuration-types",children:"File or AIO source configs:"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json5",metastring:'title="CONFIG_DIR/lastfm.json"',children:'[\n  {\n    "name": "myLastFmClient",\n    "configureAs": "client",\n    "data": {\n      // ...\n    },\n    "options": {\n        // disable or enable\n        //"nowPlaying": true\n        //\n        // OR define a list of Source *config* names that should be allowed to report Now Playing\n        // order of the list determines priority for reporting Now Playing\n        //"nowPlaying": ["mySpotify1","myJellyfin2"]\n    }\n  },\n]\n'})})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);